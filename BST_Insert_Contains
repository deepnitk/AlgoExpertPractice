import java.util.*;

class Program {
  static class BST {
    public int value;
    public BST left;
    public BST right;

    public BST(int value) {
      this.value = value;
    }

    //Avg: o(log(n)) time | o(1) space
    //worst o(n) time| o(1) space
    public BST insert(int value) {
			BST currentNode = this;
			while(true) {
				if(value < currentNode.value){
					if(currentNode.left == null){
						BST newNode = new BST(value);
						currentNode.left = newNode;
						break;
					}
					else {
						currentNode = currentNode.left;
					}
				} else{
					if(currentNode.right == null){
						BST newNode = new BST(value);
						currentNode.right =  newNode;
						break;
					}
					else{
						currentNode = currentNode.right;
					}
				}
			}
      return this;
    }
    
    //Avg: o(log(n)) time | o(1) space
    //worst o(n) time| o(1) space
    public boolean contains(int value) {
      // Write your code here.
			BST currentNode = this;
			while(currentNode != null){
				if(currentNode.value == value)
					return true;
				else if(value < currentNode.value){
					currentNode = currentNode.left;
				}
				else {
					currentNode = currentNode.right;
				}
			}
      return false;
    }

    public BST remove(int value) {
      // Write your code here.
      // Do not edit the return statement of this method.
      return this;
    }
  }
}
